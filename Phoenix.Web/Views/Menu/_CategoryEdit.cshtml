@model Phoenix.Web.Models.CategoryModel
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            @if (Model.CategoryId != 0)
            {
                <h4 class="pull-left">Edit @Model.DisplayName</h4>
            }
            else
            {
                <h4 class="pull-left">Create Category</h4>
            }&nbsp;&nbsp;
            <a id="btnMenuList" class="btn btn-default btn-inverse pull-right functionalbtn"><i class="glyphicon glyphicon-chevron-left glyphicon-white"></i>&nbsp;Back to Menus</a>
            @if (User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator") || User.IsInRole("Editor"))
            {
                <span class="pull-right">&nbsp;</span><a class="btn btn-default pull-right functionalbtn" id="btnRemoveCat"><i class="glyphicon glyphicon-remove"></i>&nbsp;Remove Category</a>
            }
        </div>
    </div>
    <hr style="width: 100%;" />
    <div class="resizable-tree form-horizontal">
        @using (Html.BeginForm("SaveCat", "Menu", FormMethod.Post, new { id = "newCatForm", Class = "form-horizontal" }))
        {<div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @Html.HiddenFor(i => i.CategoryId)
                @Html.HiddenFor(i => i.SortOrder)
                @Html.HiddenFor(i => i.MenuId)
                @Html.HiddenFor(i => i.NetworkObjectId)
                @Html.HiddenFor(i => i.IsEndOfOrder)
                @if (Model.CategoryId == 0)
                {
                    <div class='pull-right'>&nbsp;<a id="btnCreateCatCancel" class="btn btn-default btn-inverse functionalbtn"><i class="glyphicon glyphicon-remove glyphicon-white"></i>&nbsp;Cancel</a></div>
                }
                @if (User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator") || User.IsInRole("Editor"))
                {
                    <a id="btnSaveCat" class="btn btn-default btn-primary pull-right savefunctionalbtn" data-loading-text="Saving..."><i class="glyphicon glyphicon-ok glyphicon-white"></i>&nbsp;Save</a><span>&nbsp;</span>
                }
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.HiddenFor(i => i.CategoryTypeId)
                    @Html.LabelFor(i => i.CategoryTypeId, new { Class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                        <input id="CategoryType" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="form-group">
                        @Html.LabelFor(i => i.DisplayName, new { Class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                            @Html.TextBoxFor(i => i.DisplayName, new { Class = "form-control", maxlength = 128 }) @Html.ValidationMessageFor(i => i.DisplayName)
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(i => i.InternalName, new { Class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    @Html.TextBoxFor(i => i.InternalName, new { Class = "form-control", maxlength = 128 }) @Html.ValidationMessageFor(i => i.InternalName)
                </div>
            </div>
             <div class="form-group">
                 @Html.LabelFor(i => i.DeepLinkId, new { Class = "control-label col-xs-3 col-sm-3 col-md-3 col-lg-3" })
                 <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                     @Html.TextBoxFor(i => i.DeepLinkId, new { Class = "form-control", maxlength = 64 }) @Html.ValidationMessageFor(i => i.DeepLinkId)
                 </div>
             </div>
        </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="form-group">
                        <div class="control-label col-xs-3 col-sm-3 col-md-3 col-lg-3">Options</div>
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                            <label class="checkbox-inline">@Html.CheckBoxFor(i => i.ShowPrice) Show Price </label>
                            @*<label class="checkbox">@Html.CheckBoxFor(i => i.IsFeatured) Featured</label>*@ @Html.HiddenFor(i => i.IsFeatured)
                            @*<label class="checkbox-inline">@Html.CheckBoxFor(i => i.IsEndOfOrder) End Of Order</label>*@
                        </div>
                    </div>
                </div>
            </div>
            <!-- Start Date -->

            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="form-group">
                        <label class="control-label col-xs-3 col-sm-3 col-md-3 col-lg-3">Availability</label>
                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 fluid">
                            Start
                            <input type="text" id="j_start_date" />
                            @Html.HiddenFor(m => m.StartDate) @Html.ValidationMessageFor(m => m.StartDate)<div class="field-validation-error" id="formErr"></div>
                        </div>
                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 fluid">
                            End
                            <input type="text" id="j_end_date" />
                            @Html.HiddenFor(m => m.EndDate) @Html.ValidationMessageFor(m => m.EndDate)
                        </div>
                    </div>
                </div>
            </div>
            
            <input type="hidden" id="SelectedScheduleId" value="0" />
            if (Model.CategoryId != 0)
            {
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <ul id="catpanelbar">

                            <li id="catpanelSch">
                                <b><span class="div-with-marign-5" style="font-size: 120%;">Schedule</span></b>
                                @Html.HiddenFor(x => x.IsScheduleModified)
                                <div id="divcatSchCycleDetails" class="div-with-marign-10">
                                    <table id="catSchDetailTable" class="table table-bordered" style="text-align:center;">
                                        <tr>
                                            <th></th>
                                            @foreach (var dayOfWeek in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
                                            {
                                                @Html.HiddenFor(x => x.ScheduleDetails[(int)dayOfWeek].Day);
                                                @Html.HiddenFor(x => x.ScheduleDetails[(int)dayOfWeek].Id);
                                                                                                          var chkdisabled = Model.ScheduleDetails[(int)dayOfWeek].Cycles.Any(x => x.IsShow.HasValue && x.IsShow.Value) ? true : false;
                                                                                                        <th data-dayofweek="@((int)dayOfWeek)" data-daypartcount="@Model.ScheduleDetails[(int)dayOfWeek].Cycles.Count()">
                                                                                                            @dayOfWeek.ToString()&nbsp;
                                                                                                            @if (chkdisabled)
                                                                                                            {
                                                                                                                @Html.CheckBoxFor(x => x.ScheduleDetails[(int)dayOfWeek].IsSelected, new { @class = "catSchDayOfWeekChkBox", data_dayOfWeek = (int)dayOfWeek, disabled = "disabled" })
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                @Html.CheckBoxFor(x => x.ScheduleDetails[(int)dayOfWeek].IsSelected, new { @class = "catSchDayOfWeekChkBox", data_dayOfWeek = (int)dayOfWeek })
                                                                                                            }
                                                                                                        </th>
                                            }
                                        </tr>
                                        @{
                var tabindex = 19;
                                        }
                                        @foreach (var cycle in Model.Cycles)
                                        {
                                            <tr>
                                                <td>@cycle.CycleName</td>

                                                @foreach (var dayOfWeek in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
                                                {
                                                    var isDaySelected = Model.ScheduleDetails[(int)dayOfWeek] != null ? Model.ScheduleDetails[(int)dayOfWeek].IsSelected : true;
                                                    var bgClass = "";
                                                    var dayPartValue = "";
                                                    var dayPartDetail = Model.ScheduleDetails[(int)dayOfWeek].Cycles.Where(x => x.SchCycleId == cycle.SchCycleId).FirstOrDefault();
                                                    //If cycle isdetail is not null then IsShow always has value
                                                    var cycleIndex = -1;
                                                    if (dayPartDetail != null)
                                                    {
                                                        cycleIndex = Model.ScheduleDetails[(int)dayOfWeek].Cycles.IndexOf(dayPartDetail);
                                                        dayPartValue = dayPartDetail.IsShow.HasValue ? (dayPartDetail.IsShow.Value == true ? "Show" : "Hide") : "";
                                                        var divTDId = "divCatDayPart_" + ((int)dayOfWeek).ToString() + "_" + cycleIndex;
                                                        <div id="@divTDId">
                                                            @Html.Hidden("ScheduleDetails[" + ((int)dayOfWeek).ToString() + "].Cycles[" + cycleIndex.ToString() + "].Id", dayPartDetail.Id)
                                                            @Html.Hidden("ScheduleDetails[" + ((int)dayOfWeek).ToString() + "].Cycles[" + cycleIndex.ToString() + "].LinkId", dayPartDetail.LinkId)
                                                            @Html.Hidden("ScheduleDetails[" + ((int)dayOfWeek).ToString() + "].Cycles[" + cycleIndex.ToString() + "].SchCycleId", dayPartDetail.SchCycleId)
                                                            @Html.Hidden("ScheduleDetails[" + ((int)dayOfWeek).ToString() + "].Cycles[" + cycleIndex.ToString() + "].IsShow", dayPartDetail.IsShow)
                                                        </div>
                                                    }
                                                    if (isDaySelected && string.IsNullOrWhiteSpace(dayPartValue))
                                                    {
                                                        bgClass = "success";
                                                    }
                                                    <td class="catSchtd @bgClass" data-schcycleid="@cycle.SchCycleId" data-dayofweek="@((int)dayOfWeek)" data-daypartvalue="@dayPartValue" data-cycleindex="@cycleIndex" tabindex="@tabindex">@dayPartValue</td>
                                                    tabindex++;
                                                }
                                            </tr>
                                        }
                                    </table>
                                    <div class="alert alert-info">
                                        Keyboard Shortcuts:&nbsp;&nbsp;&nbsp;<span class="label label-info">Tab</span> Navigate to next&nbsp;&nbsp;&nbsp;&nbsp;<span class="label label-info">S</span> Show&nbsp;&nbsp;&nbsp;&nbsp;<span class="label label-info">H</span> Hide&nbsp;&nbsp;&nbsp;&nbsp;<span class="label label-info">DELETE</span> Clear&nbsp;&nbsp;&nbsp;&nbsp;<span class="label label-info">Spacebar</span> Change the day default selection
                                    </div>
                                </div>
                            </li>
                            <li id="catpanelCat">
                                <b><span class="div-with-marign-5" style="font-size: 120%;">Categories</span></b>
                                <div class="div-with-marign-10">
                                    @if (User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator") || User.IsInRole("Editor"))
                                    {
                                        <div class='pull-right'>&nbsp;<a id="btnOpenCats" class="btn btn-default btn-sm functionalbtn"><i class="glyphicon glyphicon-plus"></i>&nbsp;Add Existing Category</a></div>
                                        <a class="btn btn-default btn-sm pull-right functionalbtn" id="btnCreateSubCat"><i class="glyphicon glyphicon-th-large"></i>&nbsp;Create Category</a>
                                        <br />
                                    }
                                    <br />
                                    <div id="gridSubCategories" style="font-size: 75%;" />
                                </div>
                            </li>
                            <li id="catpanelItem">
                                <span class="div-with-marign-5" style="font-size: 120%;"><b>Items</b></span>
                                <div class="div-with-marign-10">
                                    @if (User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator") || User.IsInRole("Editor"))
                                    {
                                        <span class="pull-right">&nbsp;</span><a id="btnOpenItems" class="btn btn-default btn-sm pull-right functionalbtn"><i class="glyphicon glyphicon-plus"></i>&nbsp;Add Item</a>
                                        <a id="btnOpenOvrItems" class="btn btn-default btn-sm pull-right functionalbtn"><i class="glyphicon glyphicon-plus"></i>&nbsp;Add Existing Item</a>
                                        <br />
                                    }
                                    <br />
                                    <div id="gridCategorItems" style="font-size: 75%;" />
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div id="windowCatItemList" class="k-content resizable-window">
                    <a id="btnCatItemAdd" class="btn btn-info btn-sm pull-right addfunctionalbtn" data-loading-text="Processing..."><i class="glyphicon glyphicon-plus"></i>&nbsp;Add Selected Items</a>
                    <br />
                    <br />
                    <div id="gridCatItemInfo" style="font-size: 75%;" class="resizable-popup-grid"></div>
                </div>
                <div id="windowCatOvrItemList" class="k-content resizable-window">
                    <a id="btnCatOvrItemAdd" class="btn btn-info btn-sm pull-right addfunctionalbtn" data-loading-text="Processing..."><i class="glyphicon glyphicon-plus"></i>&nbsp;Add Selected Items</a>
                    <br />
                    <br />
                    <div id="gridCatOvrItemInfo" style="font-size: 75%;" class="resizable-popup-grid"></div>
                </div>
                <div id="windowSubCatList" class="k-content resizable-window">
                    <a id="btnSubCatAdd" class="btn btn-info btn-sm pull-right addfunctionalbtn" data-loading-text="Processing..."><i class="glyphicon glyphicon-plus"></i>&nbsp;Add Selected Categories</a>
                    <br />
                    <br />
                    <div id="gridSubCatInfo" style="font-size: 75%;" class="resizable-popup-grid"></div>
                </div>

                <div id="windowUpdatedCatItemList" class="k-content resizable-window">
                    Please update the following default display names:
                    <br />
                    <span id="catItemUpdatedStatus" class="statusdiv"></span>
                    <br />
                    <div id="gridUpdatedCatItemInfo" style="font-size: 75%;"></div>
                </div>
            }
        }
    </div>
    </div>
